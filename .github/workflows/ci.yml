# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  get_dependencies:
    name: "Get dependencies"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
      - name: "Print Dart SDK Version"
        run: dart --version
      - uses: actions/cache@v2
        with:
          path: .dart_tool
          key: dart-dependencies-${{ hashFiles('pubspec.yaml') }}
      - name: "Get dependencies"
        env: 
          PUB_CACHE: ".dart_tool/pub_cache"
        run: dart pub upgrade
  
  ensure_formatted:
    name: "Formatting"
    runs-on: "ubuntu-latest"
    container: 
      image: google/dart
    steps:
      - uses: actions/checkout@v2
      - run: "dart format --fix --show none --summary none --output none --set-exit-if-changed lib test tool --line-length 120"
  
  analyze: 
    name: "Analysis"
    needs: get_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .dart_tool
          key: dart-dependencies-${{ hashFiles('pubspec.yaml')}}
      - uses: dart-lang/setup-dart@v1
      - run: dart run build_runner build --delete-conflicting-outputs
      - run: dart analyze --fatal-infos
  
